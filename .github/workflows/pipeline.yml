name: Setup Cloud

on:
  push:
    branches: 
      - main

jobs:
 
  setup-terraform:

    runs-on: ubuntu-latest

    steps:
            
    - name: Check out code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2        
        
    - name: Setup Terraform CLI
      uses: hashicorp/setup-terraform@v2.0.2

    - name: Terraform Init
      id: init
      run: terraform init
    
    - name: Terraform Validate
      id: validate
      run: terraform validate -no-color

    - name: Terraform Destroy
      id: destory
      run: terraform destroy
      continue-on-error: true
    
    - name: Terraform Plan
      id: plan
      run: terraform plan -no-color
      continue-on-error: true    

    - name: Terraform Apply
      id: apply
      run: terraform apply -auto-approve
      continue-on-error: true

  setup-kubernetes:

    runs-on: ubuntu-latest
    needs: setup-terraform
    
    steps:
            
    - name: Check out code
      uses: actions/checkout@v3

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-2
        mask-aws-account-id: 'no'

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1    
 
    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      id: install-kubectl

    - name: Update KubeConfig
      shell: bash
      run: |
        aws eks update-kubeconfig --name fiap-tech-challenge-infra-k8s --region=us-east-2 

    - name: Deploy 
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |        
        export ECR_REPOSITORY=${{ env.ECR_REGISTRY }}/fiap-tech-challenge-api:latest        
        export DB_HOST=${{ secrets.DB_HOST }}
        export DB_PASS=${{ secrets.DB_PASS }}
        cd ./kubernetes/metrics-server
        kubectl apply -f components.yaml
        cd ../api-go
        envsubst < secrets.yaml | kubectl apply -f -
        envsubst < api-deployment.yaml | kubectl apply -f -
        kubectl apply -f api-hpa.yaml
        kubectl apply -f api-svc.yaml
        kubectl rollout restart deployment api-deployment

    - name: Deploy API Producao
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |        
        export ECR_REPOSITORY=${{ env.ECR_REGISTRY }}/fiap-tech-challenge-api-producao:latest        
        export DB_HOST=${{ secrets.DB_HOST }}
        export DB_PASS=${{ secrets.DB_PASS }}
        cd ./kubernetes/api-producao
        envsubst < secrets.yaml | kubectl apply -f -
        envsubst < deployment.yaml | kubectl apply -f -
        kubectl apply -f hpa.yaml
        kubectl apply -f svc.yaml
        kubectl rollout restart deployment api-producao-deployment

    - name: Deploy API Pedidos
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |        
        export ECR_REPOSITORY=${{ env.ECR_REGISTRY }}/fiap-tech-challenge-api-pedidos:latest        
        export DB_HOST=${{ secrets.DB_HOST }}
        export DB_PASS=${{ secrets.DB_PASS }}
        cd ./kubernetes/api-pedidos
        envsubst < secrets.yaml | kubectl apply -f -
        envsubst < deployment.yaml | kubectl apply -f -
        kubectl apply -f hpa.yaml
        kubectl apply -f svc.yaml
        kubectl rollout restart deployment api-pedidos-deployment

    - name: Deploy API Pagamentos
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
      run: |        
        export ECR_REPOSITORY=${{ env.ECR_REGISTRY }}/fiap-tech-challenge-api-pagamentos:latest        
        export DB_HOST=${{ secrets.DB_HOST }}
        export DB_PASS=${{ secrets.DB_PASS }}
        cd ./kubernetes/api-pagamentos
        envsubst < secrets.yaml | kubectl apply -f -
        envsubst < deployment.yaml | kubectl apply -f -
        kubectl apply -f hpa.yaml
        kubectl apply -f svc.yaml
        kubectl rollout restart deployment api-pagamentos-deployment
        
